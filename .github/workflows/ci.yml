name: CI
on: [push, pull_request]
jobs:
  ci:
    strategy:
      matrix:
        platform: [x86, x64]
    runs-on: windows-latest
    defaults:
      run:
        shell: bash --noprofile --norc -e -o pipefail -o igncr {0}
    env:
      PATH: C:\cygwin\bin
    steps:
      - name: Install Cygwin
        uses: cygwin/cygwin-install-action@ad81540ad7c2726e17c08401fbeca6380cc7f463
        with:
          platform: ${{ matrix.platform }}
          packages: cygport git docbook-xsl libxslt perl-IPC-Run xz
        timeout-minutes: 10
      - name: Checkout
        uses: actions/checkout@v2
        timeout-minutes: 1
      - name: Generate cygcheck output
        if: always()
        run: cygcheck -srv >/var/log/cygcheck.out
        timeout-minutes: 5
      - name: Store Cygwin logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cygwin-logs-${{ matrix.platform }}
          path: 'C:\cygwin\var\log\'
        timeout-minutes: 5
      - name: Cygport download
        run: cygport moreutils.cygport download
        timeout-minutes: 5
      - name: Cygport prep
        run: cygport moreutils.cygport prep
        timeout-minutes: 1
      - name: Cygport compile
        run: cygport moreutils.cygport compile
        timeout-minutes: 30
      - name: Cygport test
        run: cygport moreutils.cygport test
        timeout-minutes: 300
      - name: Cygport install
        run: cygport moreutils.cygport install
        timeout-minutes: 30
      - name: Cygport package
        run: cygport moreutils.cygport package
        timeout-minutes: 5
      - name: Configure SSH
        if: github.ref == 'refs/heads/main'
        env:
          MAINTAINER_KEY: ${{ secrets.MAINTAINER_KEY }}
        run: |
          umask 0077
          mkdir -p ~/.ssh
          echo "$MAINTAINER_KEY" >~/.ssh/id_rsa
          echo 'cygwin.com,8.43.85.97 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGqrxexIuyqmCVe33p1HuhUFzsXte5QZKb+BJlsRrvXOpUOJEW2S0kszyAiymeV7AXaYmHDKVRJpGVR+0ua0Xww=' >~/.ssh/known_hosts
        timeout-minutes: 1
      - name: Compute release name
        if: github.ref == 'refs/heads/main'
        id: release-name
        run: |
          eval $(grep -e '^VERSION=' -e '^RELEASE=' moreutils.cygport)
          printf '::set-output name=release::v%s-%s' "$VERSION" "$RELEASE"
        timeout-minutes: 1
      - name: Create release tag
        if: github.ref == 'refs/heads/main'
        env:
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
        run: |
          git tag -am '${{ steps.release-name.outputs.release }}' '${{ steps.release-name.outputs.release }}'
          git push origin tag '${{ steps.release-name.outputs.release }}'
        timeout-minutes: 1
      - name: Create a GitHub release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release-name.outputs.release }}
          files: moreutils-*/dist/moreutils/*
          target_commitish: ${{ github.ref }}
        timeout-minutes: 2
      - name: Mirror to Cygwin Git repositories
        if: github.ref == 'refs/heads/main'
        run: git push cygwin@cygwin.com:/git/cygwin-packages/moreutils '${{ steps.release-name.outputs.release }}'
        timeout-minutes: 5
      - name: Cygport upload
        if: github.ref == 'refs/heads/main'
        run: SSH_KEY=~/.ssh/id_rsa cygport moreutils.cygport upload
        timeout-minutes: 5
      - name: Tar up build results
        if: always()
        run: tar -caf moreutils-${{ matrix.platform }}.txz moreutils-*-*.*/
        timeout-minutes: 10
      - name: Store build results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build-results-${{ matrix.platform }}
          path: moreutils-${{ matrix.platform }}.txz
          if-no-files-found: error
        timeout-minutes: 5
